{
  "openapi": "3.0.0",
  "info": {
    "title": "Bookstore API",
    "version": "1.0.0",
    "description": "REST API for a Bookstore with authentication and file-based persistence."
  },
  "servers": [
    { "url": "http://localhost:3000" }
  ],
  "components": {
    "securitySchemes": {
      "bearerAuth": {
        "type": "http",
        "scheme": "bearer",
        "bearerFormat": "JWT"
      }
    },
    "schemas": {
      "Book": {
        "type": "object",
        "properties": {
          "id": { "type": "string", "format": "uuid" },
          "title": { "type": "string" },
          "author": { "type": "string" },
          "genre": { "type": "string" },
          "publishedYear": { "type": "integer" },
          "userId": { "type": "string" }
        }
      },
      "User": {
        "type": "object",
        "properties": {
          "id": { "type": "string", "format": "uuid" },
          "email": { "type": "string" }
        }
      }
    }
  },
  "security": [{ "bearerAuth": [] }],
  "paths": {
    "/register": {
      "post": {
        "summary": "Register a new user",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": { "type": "object", "properties": { "email": { "type": "string" }, "password": { "type": "string" } }, "required": ["email", "password"] }
            }
          }
        },
        "responses": {
          "201": { "description": "User registered" },
          "409": { "description": "User already exists" }
        }
      }
    },
    "/login": {
      "post": {
        "summary": "Login and receive a JWT token",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": { "type": "object", "properties": { "email": { "type": "string" }, "password": { "type": "string" } }, "required": ["email", "password"] }
            }
          }
        },
        "responses": {
          "200": { "description": "JWT token returned" },
          "401": { "description": "Invalid credentials" }
        }
      }
    },
    "/books": {
      "get": {
        "summary": "List all books",
        "parameters": [
          { "name": "genre", "in": "query", "schema": { "type": "string" }, "description": "Filter by genre" },
          { "name": "page", "in": "query", "schema": { "type": "integer" }, "description": "Page number" },
          { "name": "limit", "in": "query", "schema": { "type": "integer" }, "description": "Page size" }
        ],
        "responses": {
          "200": { "description": "List of books", "content": { "application/json": { "schema": { "type": "object", "properties": { "books": { "type": "array", "items": { "$ref": "#/components/schemas/Book" } }, "total": { "type": "integer" }, "page": { "type": "integer" }, "limit": { "type": "integer" } } } } } }
        },
        "security": [{ "bearerAuth": [] }]
      },
      "post": {
        "summary": "Add a new book",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/Book" }
            }
          }
        },
        "responses": {
          "201": { "description": "Book created" },
          "400": { "description": "Validation error" }
        },
        "security": [{ "bearerAuth": [] }]
      }
    },
    "/books/search": {
      "get": {
        "summary": "Search books by genre",
        "parameters": [
          { "name": "genre", "in": "query", "schema": { "type": "string" }, "description": "Genre name" },
          { "name": "page", "in": "query", "schema": { "type": "integer" }, "description": "Page number" },
          { "name": "limit", "in": "query", "schema": { "type": "integer" }, "description": "Page size" }
        ],
        "responses": {
          "200": { "description": "Filtered books", "content": { "application/json": { "schema": { "type": "object", "properties": { "books": { "type": "array", "items": { "$ref": "#/components/schemas/Book" } }, "total": { "type": "integer" }, "page": { "type": "integer" }, "limit": { "type": "integer" } } } } } }
        },
        "security": [{ "bearerAuth": [] }]
      }
    },
    "/books/{id}": {
      "get": {
        "summary": "Get book by ID",
        "parameters": [
          { "name": "id", "in": "path", "required": true, "schema": { "type": "string" } }
        ],
        "responses": {
          "200": { "description": "Book found", "content": { "application/json": { "schema": { "$ref": "#/components/schemas/Book" } } } },
          "404": { "description": "Book not found" }
        },
        "security": [{ "bearerAuth": [] }]
      },
      "put": {
        "summary": "Update a book by ID",
        "parameters": [
          { "name": "id", "in": "path", "required": true, "schema": { "type": "string" } }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/Book" }
            }
          }
        },
        "responses": {
          "200": { "description": "Book updated" },
          "403": { "description": "Not authorized or book not found" }
        },
        "security": [{ "bearerAuth": [] }]
      },
      "delete": {
        "summary": "Delete a book by ID",
        "parameters": [
          { "name": "id", "in": "path", "required": true, "schema": { "type": "string" } }
        ],
        "responses": {
          "200": { "description": "Book deleted" },
          "403": { "description": "Not authorized or book not found" }
        },
        "security": [{ "bearerAuth": [] }]
      }
    }
  }
}
